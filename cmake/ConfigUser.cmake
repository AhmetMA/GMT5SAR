#
# $Id: ConfigDefault.cmake 380 2016-08-14 06:42:31Z fwobbe $
#
# Default GMTSAR settings. DO NOT EDIT THIS FILE!
#
# There are two configuration files:
#   1) "ConfigDefault.cmake" - is version controlled and used to add new default
#      variables and set defaults for everyone.
#   2) "ConfigUser.cmake" - is not version controlled (currently listed in
#      svn:ignore property) and used to override defaults on a per-user basis.
#
# NOTE: If you want to change CMake behaviour just for yourself then copy
#      "ConfigUserTemplate.cmake" to "ConfigUser.cmake" and then edit
#      "ConfigUser.cmake" (not "ConfigDefault.cmake" or "ConfigUserTemplate.cmake").
#

# Set build type can be: empty, Debug, Release, relwithdebinfo or minsizerel (default is Release)
set(CMAKE_BUILD_TYPE Debug)

# The GMTSAR package name.
set (GMTSAR_PACKAGE_NAME "GMTSAR")

# a short description of the gmt project (only a few words).
set (GMTSAR_PACKAGE_DESCRIPTION_SUMMARY "Includes preprocessors for ERS1/2,
Envisat, ALOS-1, ALOS-2, TerraSAR-X, COSMOS-SkyMed, and RADARSAT-2 (beta),
Sentinel-1A TOPS")

# GMTSAR_VERSION_YEAR is set to current date in
# cmake/modules/ConfigCMake.cmake if not specified here:
#set (GMTSAR_VERSION_YEAR "2015")

# The GMTSAR package version.
set (GMTSAR_PACKAGE_VERSION_MAJOR 5)
set (GMTSAR_PACKAGE_VERSION_MINOR 3)
set (GMTSAR_PACKAGE_VERSION_PATCH 0)

# The subversion revision of the GMTSAR source code.
# This is manually set when making GMTSAR *public* releases.
# However, when making internal releases or just an ordinary developer build, leave it
# empty; if it is empty, the revision number is automatically populated for you on build.
#set (GMTSAR_SOURCE_CODE_CONTROL_VERSION_STRING "15220")

# The GMTSAR package version.
set (GMTSAR_PACKAGE_VERSION "${GMTSAR_PACKAGE_VERSION_MAJOR}.${GMTSAR_PACKAGE_VERSION_MINOR}.${GMTSAR_PACKAGE_VERSION_PATCH}")

# The API version (SOVERSION) of the GMTSAR libraries.
# Increment this when more or fewer functions are included in the
# library, the function prototype changes, or data type changes.
set (GMTSAR_LIB_SOVERSION 5)

# The build version (VERSION) of the GMTSAR libraries.
set (GMTSAR_LIB_VERSION "${GMTSAR_LIB_SOVERSION}.${GMTSAR_PACKAGE_VERSION_MINOR}.${GMTSAR_PACKAGE_VERSION_PATCH}")

# The GMTSAR wiki location
set (GMTSAR_TRAC_WIKI "http://gmt.soest.hawaii.edu/projects/gmt5sar/wiki")

# Directory in which to install the release sources per default
if (NOT DEFINED GMTSAR_RELEASE_PREFIX)
	set (GMTSAR_RELEASE_PREFIX ${GMTSAR_BINARY_DIR}/gmtsar-${GMTSAR_PACKAGE_VERSION})
endif (NOT DEFINED GMTSAR_RELEASE_PREFIX)

# The following is from http://mail.kde.org/pipermail/kde-buildsystem/2008-November/005112.html...
#
# "The way to identify whether a generator is multi-configuration is to
# check whether CMAKE_CONFIGURATION_TYPES is set.  The VS/XCode generators
# set it (and ignore CMAKE_BUILD_TYPE).  The Makefile generators do not
# set it (and use CMAKE_BUILD_TYPE).  If CMAKE_CONFIGURATION_TYPES is not
# already set, don't set it."
#
if (NOT DEFINED CMAKE_CONFIGURATION_TYPES)
	if (NOT DEFINED CMAKE_BUILD_TYPE)
		# Should we set build type to RelWithDebInfo for developers and
		# to release for general public (ie when GPLATES_SOURCE_RELEASE is true) ?
		# Currently it's Release for both.
		set (CMAKE_BUILD_TYPE Release CACHE STRING
		"Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ${extra_build_configurations}."
		FORCE)
	endif (NOT DEFINED CMAKE_BUILD_TYPE)
endif (NOT DEFINED CMAKE_CONFIGURATION_TYPES)


# Turn this on if you want to...
#  Unix: see compiler commands echoed to console and messages about make
#  entering and leaving directories.
#  VisualStudio: see compiler commands.
# Setting CMAKE_VERBOSE_MAKEFILE to 'true'...
#  Unix: puts 'VERBOSE=1' in the top Makefile.
#  VisualStudio: sets SuppressStartupBanner to FALSE.
# If CMAKE_VERBOSE_MAKEFILE is set to 'false' and you want to turn on
# verbosity temporarily you can...
#  Unix: type 'make VERBOSE=1'  on the command-line when building.
#  VisualStudio: change SuppressStartupBanner to 'no' in "project
#  settings->configuration properties->*->general".
if (NOT DEFINED CMAKE_VERBOSE_MAKEFILE)
	set (CMAKE_VERBOSE_MAKEFILE false)
endif (NOT DEFINED CMAKE_VERBOSE_MAKEFILE)

# prefer shared libs over static
set (BUILD_SHARED_LIBS true)
set (CMAKE_FIND_STATIC LAST)

# search order for find_*
#set (CMAKE_FIND_FRAMEWORK LAST)

if (WIN32)
	# The compiler. Either 10 or 12 for VS2010 or VS2012
	set (VC VC12)

	#SET(MKL_FLAGS "/Qmkl /fast")
	SET(CMAKE_C_FLAGS  "${CMAKE_C_FLAGS} ${MKL_FLAGS} /W2" )

	set (BITAGE 32)
	# Detect if we are building a 32 or 64 bits version
	if (CMAKE_SIZEOF_VOID_P EQUAL 8)
		set(BITAGE 64)
	endif ()

	set (SAR_DLL_RENAME gmt_w${BITAGE})

	set (CMAKE_C_FLAGS "/D_CRT_SECURE_NO_WARNINGS /D_CRT_SECURE_NO_DEPRECATE ${CMAKE_C_FLAGS}")  # extra no warnings
	set (CMAKE_C_FLAGS "/D_CRT_NONSTDC_NO_DEPRECATE /D_SCL_SECURE_NO_DEPRECATE ${CMAKE_C_FLAGS}")

	# Installation path
	set(CMAKE_INSTALL_PREFIX "C:/progs_cygw/GMTdev/GMT5SAR/trunk/WIN${BITAGE}")

	# Set location of GMT
	set (GMT_ROOT C:/progs_cygw/GMTdev/GMT5/trunk/WIN${BITAGE})

	# set location of netcdf (can be root directory, path to header file or path to nc-config):
	set(NETCDF_DIR "C:/programs/compa_libs/netcdf_GIT/compileds/${VC}_${BITAGE}")
	set(NETCDF_LIBRARY "C:/programs/compa_libs/netcdf_GIT/compileds/${VC}_${BITAGE}/lib/netcdf.lib")

	# set location of HDF5
	set(HDF5_DIR "C:/programs/compa_libs/hdf5-1.10.0/compileds/${VC}_${BITAGE}")
	set(HDF5_INCLUDE_DIR "C:/programs/compa_libs/hdf5-1.10.0/compileds/${VC}_${BITAGE}/include")
	set(HDF5_LIBRARY "C:/programs/compa_libs/hdf5-1.10.0/compileds/${VC}_${BITAGE}/lib/hdf5.lib")
	# Location of HFD5 (repetido)
	set (HDF5_path C:/programs/compa_libs/hdf5-1.10.0)
	set (HDF5_DIR ${HDF5_path}/compileds/${VC}_${BITAGE}/cmake)
	set (ENV{HDF5_ROOT} ${HDF5_path}/compileds/${VC}_${BITAGE})

	# set location of netcdf (can be root directory, path to header file or path to nc-config):
	set(TIFF_INCLUDE_DIR "c:/programs/compa_libs/tiff-4.0.6/compileds/${VC}_${BITAGE}")
	set(TIFF_LIBRARY "c:/programs/compa_libs/tiff-4.0.6/compileds/${VC}_${BITAGE}/lib/libtiff_i.lib")

	set(MMAP_LIB "C:/programs/compa_libs/mman-win32/compileds/${VC}_${BITAGE}/lib/mman.lib")

	set(GETOPT_LIB "C:/programs/compa_libs/getopt/compileds/${VC}_${BITAGE}/lib/getopt.lib")
	set(GETOPT_INC "C:/programs/compa_libs/getopt/compileds/${VC}_${BITAGE}/include")

	# Set location of single precision FFTW (can be root directory or path to header file) [auto]:
	set (FFTW3_ROOT "C:/programs/compa_libs/fftw-3.3.3/compileds/${VC}_${BITAGE}/lib/")
	set (FFTW3F_LIBRARY "C:/programs/compa_libs/fftw-3.3.3/compileds/${VC}_${BITAGE}/lib/libfftwf-3.3.lib")

	# Set LAPACK location.
	set (LAPACK_LIB "C:/programs/compa_libs/lapack-3.5.0/compileds/lib/liblapack.lib")
	set (LAPACK_DIR C:/programs/compa_libs/lapack-3.5.0/compileds/lib/cmake/lapack-3.4.2)
	set (LAPACK_ROOT C:/programs/compa_libs/lapack-3.5.0/compileds/lib)
else ()
	# Installation path
	#set(CMAKE_INSTALL_PREFIX "~/programs/bin2")
endif ()


# vim: textwidth=78 noexpandtab tabstop=2 softtabstop=2 shiftwidth=2
